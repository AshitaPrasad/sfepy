# 04.09.2006

regions operating on FE mesh, not geometry mesh? (-> avoiding 'hanging' edges,
faces, difficult to implement?)

# 08.06.2006

numpy based qsort functions (sort.c) do not preserve ordering!!!
-> connectivity in different order than in input mesh => coupling problems
   with fluent (fixed 04.09.2006)

# 30.01.2006
- SA of klikatak: 40 minutes (with FMF_DEBUG, no optimizations, 524 design vars)

# 05.01.2006

FE puzzle partially resolved
 - region_0 (the wall) included also the outlet!!! -> whole
boundary had fixed velocities -> pressure known up to a constant. (stupid me.)
PxB/P1 now ok, x = 1, 2,
P2/P1 also but requires removing also inlet from the wall
 - otherwise edge nodes from inlet nodes to the next 'slice' of surface nodes
remain fixed which must have caused problems - but why?
 - nodes on edges between regions should also be fixed - how?

# 03.01.2006

FE puzzle:
in case of fixing (albeit one) pressure by EBC:
   - P1B/P1, P2B/P1 elements seem ok, while P2/P1 not???
otherwise always singular matrix

# 12.12.2005

terms should define their local dof ordering (NBN or DBD) so that dofConn is
generated in accordance

# 07.12.2005

think about new base function handling:

1. generate nodes in any most suitable order (genEdges, genFaces, genBubble
could be removed - unified handling, possible dim > 3)
2. compute cooridnates of the genrated nodes
3. compute nts (assign nodes to edges, faces, ...)
4. possibly sort nodes according to given order


# 27.11.2005

TODO in scipy.sparse:

+ is<type>matrix()
+ save() method
+ fix CSR .__init__() help
+ replace max() in CSR/CSC ._check() -> big speedup!
- spy for sparse matrices
+ reformat .__repr__() (too long)
+ solve() - do not make CSC from CSR...
- umfpack!!!

# 21.11.2005

using dict.fromkeys() with [] value leads to sharing!!!

# 31.10.2005

numarray/Numeric -> scipy newcore:

   int* dimensions, strides; -> intp* dimensions, strides;
    PyArray_FromDims -> PyArray_SimpleNew
    PyArray_FromDimsAndData -> PyArray_SimpleNewFromData

# 07.10.2005

definition of problems:

equation:
- div_grad( displacement ) + convect( displacement ) - grad( pressure ) = 0
  |                 |
  --- term name     |
                    --- field name

  - allowed operators: +, -, =

domain:
  - given by material id

# 03.10.2005

nodeDesc now allows 1., 2. of 30.09.2005

# 30.09.2005

- for now all fields must use mesh vertices + possibly edge nodes
-> allow fields:
    1. without mesh vertices
    2. with bubble nodes
    3. with face nodes (can wait)

- make tools for displaying the extended connectivity on a mesh

